<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AtributoCodigoProyecto" xml:space="preserve">
    <value>pro_codigo</value>
    <comment>Codigo del proyecto en la tabla PROYECTO</comment>
  </data>
  <data name="AtributoCostoProyecto" xml:space="preserve">
    <value>pro_costo</value>
    <comment>Costo del proyecto en la tabla PROYECTO</comment>
  </data>
  <data name="AtributoDescripcionProyecto" xml:space="preserve">
    <value>pro_descripcion</value>
    <comment>Descripcion del proyecto en la tabla PROYECTO</comment>
  </data>
  <data name="AtributoEstadoProyecto" xml:space="preserve">
    <value>pro_estado</value>
    <comment>Estado del proyecto en la tabla PROYECTO</comment>
  </data>
  <data name="AtributoIDProyecto" xml:space="preserve">
    <value>pro_id</value>
    <comment>ID del proyecto en la tabla PROYECTO</comment>
  </data>
  <data name="AtributoMonedaProyecto" xml:space="preserve">
    <value>pro_moneda</value>
    <comment>Moneda del proyecto en la tabla PROYECTO</comment>
  </data>
  <data name="AtributoNombreProyecto" xml:space="preserve">
    <value>pro_nombre</value>
    <comment>Nombre del proyecto en la tabla PROYECTO</comment>
  </data>
  <data name="CodigoInvolucradosInexistentes" xml:space="preserve">
    <value>T_04_002</value>
    <comment>Codigo Involucrados inexistentes</comment>
  </data>
  <data name="CodigoProyectoExiste" xml:space="preserve">
    <value>T_04_001</value>
    <comment>Codigo de Proyecto existe</comment>
  </data>
  <data name="MensajeCodigoProyectoExiste" xml:space="preserve">
    <value>El codigo de proyecto ya existe, por favor elija otro.</value>
    <comment>Mensaje de error para cuando el codigo de proyecto existe</comment>
  </data>
  <data name="MensajeInvolucradosInexistentes" xml:space="preserve">
    <value>No hay proyectos asociados al usuario.</value>
    <comment>Mensaje de error para cuando no existen involucrados al proyecto</comment>
  </data>
  <data name="ParametroClienteJuridico" xml:space="preserve">
    <value>@CLIENTE_JURIDICO_cj_id</value>
    <comment>Cliente natural del proyecto para usar en procedures</comment>
  </data>
  <data name="ParametroClienteNatural" xml:space="preserve">
    <value>@CLIENTE_NATURAL_cn_id</value>
    <comment>Cliente juridico del proyecto para usar en procedures</comment>
  </data>
  <data name="ParametroCodigoAnteriorProyecto" xml:space="preserve">
    <value>@codigo_anterior</value>
    <comment>Codigo anterior del proyecto a modificar</comment>
  </data>
  <data name="ParametroCodigoConsultaProyecto" xml:space="preserve">
    <value>@pro_codigo2</value>
    <comment>Codigo del proyecto de salida para usar en procedures </comment>
  </data>
  <data name="ParametroCodigoProyecto" xml:space="preserve">
    <value>@pro_codigo</value>
    <comment>Codigo del proyecto para usar en procedures </comment>
  </data>
  <data name="ParametroCostoProyecto" xml:space="preserve">
    <value>@pro_costo</value>
    <comment>Costo del proyecto para usar en procedures</comment>
  </data>
  <data name="ParametroDescripcionProyecto" xml:space="preserve">
    <value>@pro_descripcion</value>
    <comment>Descripcion  del proyecto para usar en procedures</comment>
  </data>
  <data name="ParametroEstadoProyecto" xml:space="preserve">
    <value>@pro_estado</value>
    <comment>Estado del proyecto para usar en procedures</comment>
  </data>
  <data name="ParametroMonedaProyecto" xml:space="preserve">
    <value>@pro_moneda</value>
    <comment>Moneda del proyecto para usar en procedures</comment>
  </data>
  <data name="ParametroNombreProyecto" xml:space="preserve">
    <value>@pro_nombre</value>
    <comment> Nombre del proyecto para usar en procedures</comment>
  </data>
  <data name="ParametroResultado" xml:space="preserve">
    <value>@resultado</value>
    <comment>Resultado de los procedures</comment>
  </data>
  <data name="ParametroUsuario" xml:space="preserve">
    <value>@usu_username</value>
    <comment>Usuario a consultar sus proyectos</comment>
  </data>
  <data name="ProcedimientoAgregarProyecto" xml:space="preserve">
    <value>Procedure_AgregarProyecto</value>
    <comment>Agrega un proyecto en la BD</comment>
  </data>
  <data name="ProcedimientoAgregarProyectoClienteJuridico" xml:space="preserve">
    <value>Procedure_AgregarProyectoClienteJuridico</value>
    <comment>Agrega un proyecto con cliente juridico en la BD</comment>
  </data>
  <data name="ProcedimientoAgregarProyectoClienteNatural" xml:space="preserve">
    <value>Procedure_AgregarProyectoClienteNatural</value>
    <comment>Agrega un proyecto con cliente natural en la BD</comment>
  </data>
  <data name="ProcedimientoConsultarProyecto" xml:space="preserve">
    <value>Procedure_ConsultarProyecto</value>
    <comment>Consulta un proyecto en la BD</comment>
  </data>
  <data name="ProcedimientoEliminarProyecto" xml:space="preserve">
    <value>Procedure_EliminarProyecto</value>
    <comment>Elimina un proyecto de la BD (exclusivo para pruebas unitarias )</comment>
  </data>
  <data name="ProcedimientoExisteProyecto" xml:space="preserve">
    <value>Procedure_ExisteProyecto </value>
    <comment>Verifica la existencia de un proyecto en la BD</comment>
  </data>
  <data name="ProcedimientoModificarProyecto" xml:space="preserve">
    <value>Procedure_ModificarProyecto</value>
    <comment>Modifica losdatos de un proyecto en la BD</comment>
  </data>
  <data name="ProcedimientosProyectosDeUsuario" xml:space="preserve">
    <value>Procedure_ProyectosDeUsuario</value>
    <comment>Procedimiento que muestra los proyectos de un usuario </comment>
  </data>
</root>