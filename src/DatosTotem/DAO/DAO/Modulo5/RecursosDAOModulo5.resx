<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ATRIBUTO_PRO_ID" xml:space="preserve">
    <value>PROYECTO_pro_id</value>
    <comment>Atributo int utilizado para poder relacionar el requerimiento con un proyecto particular</comment>
  </data>
  <data name="ATRIBUTO_REQ_CODIGO" xml:space="preserve">
    <value>req_codigo</value>
    <comment>Atributo varchar utilizado para almacenar el código autogenerado para el requerimiento</comment>
  </data>
  <data name="ATRIBUTO_REQ_DESCRIPCION" xml:space="preserve">
    <value>req_descripcion</value>
    <comment>Atributo varchar utilizado para almacenar la descripción del requerimiento</comment>
  </data>
  <data name="ATRIBUTO_REQ_ESTATUS" xml:space="preserve">
    <value>req_estatus</value>
    <comment>Atributo varchar utilizado para almacenar el estatus actual del requerimiento, pudiendo ser no finalizado, finalizado o facturado</comment>
  </data>
  <data name="ATRIBUTO_REQ_ID" xml:space="preserve">
    <value>req_id</value>
    <comment>Atributo int secuencial utilizado para definir el identificador único del requerimiento en la base de datos</comment>
  </data>
  <data name="ATRIBUTO_REQ_PRIORIDAD" xml:space="preserve">
    <value>req_prioridad</value>
    <comment>Atributo varchar utilizado para almacenar la prioridad del requerimiento, pudiendo ser baja, media o alta</comment>
  </data>
  <data name="ATRIBUTO_REQ_TIPO" xml:space="preserve">
    <value>req_tipo</value>
    <comment>Atributo varchar utilizado para almacenar el tipo de requerimiento, pudiendo ser funcional o no funcional</comment>
  </data>
  <data name="CODIGO_EXCEPCION_REQUERIMIENTO_ERRADO" xml:space="preserve">
    <value>T_05_005</value>
    <comment>Codigo de la excepcion de un requerimiento errado</comment>
  </data>
  <data name="CONSTANTE_DELIMITADOR_DE_CODIGO" xml:space="preserve">
    <value>_</value>
    <comment>Constante utilizada para tomar el caracter delimitador del código de requerimiento</comment>
  </data>
  <data name="CONSTANTE_RF" xml:space="preserve">
    <value>RF</value>
    <comment>Constante utilizada para definir el código utilizado en los requerimientos funcionales</comment>
  </data>
  <data name="CONSTANTE_RNF" xml:space="preserve">
    <value>RNF</value>
    <comment>Constante utilizada para definir el código utilizado en los requerimientos no funcionales</comment>
  </data>
  <data name="EXCEPCION_PRO_NO_ENC_CODIGO" xml:space="preserve">
    <value>T_05_001</value>
    <comment>Código utilizado en la excepción producida al no ser encontrado o ser inexistente un proyecto</comment>
  </data>
  <data name="EXCEPCION_PRO_NO_ENC_MENSAJE" xml:space="preserve">
    <value>El proyecto bajo el código especificado no ha sido encontrado o no existe</value>
    <comment>Mensaje utilizado en la excepción producida al no ser encontrado o ser inexistente un proyecto</comment>
  </data>
  <data name="EXCEPCION_REQ_NO_CRE_CODIGO" xml:space="preserve">
    <value>T_05_002</value>
    <comment>Código utilizado en la excepción producida al no ser creado un requerimiento</comment>
  </data>
  <data name="EXCEPCION_REQ_NO_CRE_MENSAJE" xml:space="preserve">
    <value>El requerimiento no ha podido ser creado correctamente</value>
    <comment>Mensaje utilizado en la excepción producida al no ser creado un requerimiento</comment>
  </data>
  <data name="EXCEPCION_REQ_NO_ELI_CODIGO" xml:space="preserve">
    <value>T_05_004</value>
    <comment>Código utilizado en la excepción producida al no ser modificado un requerimiento</comment>
  </data>
  <data name="EXCEPCION_REQ_NO_ELI_MENSAJE" xml:space="preserve">
    <value>El requerimiento no ha podido ser eliminado correctamente</value>
    <comment>Mensaje utilizado en la excepción producida al no ser eliminado un requerimiento</comment>
  </data>
  <data name="EXCEPCION_REQ_NO_MOD_CODIGO" xml:space="preserve">
    <value>T_05_003</value>
    <comment>Código utilizado en la excepción producida al no ser modificado un requerimiento</comment>
  </data>
  <data name="EXCEPCION_REQ_NO_MOD_MENSAJE" xml:space="preserve">
    <value>El requerimiento no ha podido ser modificado correctamente</value>
    <comment>Mensaje utilizado en la excepción producida al no ser modificado un requerimiento</comment>
  </data>
  <data name="MENSAJE_EXCEPCION_REQUERIMIENTO_ERRADO" xml:space="preserve">
    <value>El requerimiento tiene unos datos errados</value>
    <comment>Mensaje de error de la excepcion de un requerimiento errado</comment>
  </data>
  <data name="PARAMETRO_PROYECTO_PRO_ID" xml:space="preserve">
    <value>@PROYECTO_pro_id</value>
    <comment>Parametro utilizado para relacionar el id del proyecto</comment>
  </data>
  <data name="PARAMETRO_PRO_CODIGO" xml:space="preserve">
    <value>@pro_codigo</value>
    <comment>Parámetro utilizado para definir el código de entrada del proyecto</comment>
  </data>
  <data name="PARAMETRO_PRO_ID" xml:space="preserve">
    <value>@pro_id</value>
    <comment>Parámetro utilizado para definir el identificador numérico único del proyecto</comment>
  </data>
  <data name="PARAMETRO_REQ_CODIGO" xml:space="preserve">
    <value>@req_codigo</value>
    <comment>Parámetro utilizado para definir el código relacionado a un requerimiento particular</comment>
  </data>
  <data name="PARAMETRO_REQ_CODIGO_OUTPUT" xml:space="preserve">
    <value>@req_codigo_out</value>
    <comment>Parámetro utilizado para definir el código relacionado a un requerimiento particular</comment>
  </data>
  <data name="PARAMETRO_REQ_DESCRIPCION" xml:space="preserve">
    <value>@req_descripcion</value>
    <comment>Parámetro utilizado para definir la descripción del requerimiento</comment>
  </data>
  <data name="PARAMETRO_REQ_ESTATUS" xml:space="preserve">
    <value>@req_estatus</value>
    <comment>Parámetro utilizado para definir es estatus de un requerimiento</comment>
  </data>
  <data name="PARAMETRO_REQ_ID" xml:space="preserve">
    <value>@req_id</value>
    <comment>Parámetro utilizado para definir el identificador único de un requerimiento</comment>
  </data>
  <data name="PARAMETRO_REQ_PRIORIDAD" xml:space="preserve">
    <value>@req_prioridad</value>
    <comment>Parámetro utilizado para definir la prioridad del requerimiento</comment>
  </data>
  <data name="PARAMETRO_REQ_TIPO" xml:space="preserve">
    <value>@req_tipo</value>
    <comment>Parámetro utilizado para definir el tipo de requerimiento que deseamos</comment>
  </data>
  <data name="PARAMETRO_RESULTADO" xml:space="preserve">
    <value>@resultado</value>
    <comment>Parámetro utilizado para recibir la respuesta sobre la existencia de un requerimiento</comment>
  </data>
  <data name="PROCEDIMIENTO_AGREGAR_REQUERIMIENTO" xml:space="preserve">
    <value>M5_AgregarRequerimiento</value>
    <comment>Procedimiento utilizado para insertar un nuevo requerimiento.</comment>
  </data>
  <data name="PROCEDIMIENTO_CONSULTAR_REQUERIMIENTO" xml:space="preserve">
    <value>M5_ConsultarRequerimiento</value>
    <comment>Procedimiento utilizado para retornar los atributos que conforman un requerimiento determinado dado su identificador único</comment>
  </data>
  <data name="PROCEDIMIENTO_CONSULTAR_REQUERIMIENTOS_POR_PROYECTO" xml:space="preserve">
    <value>M5_ConsultarRequerimientosPorProyecto</value>
    <comment>Procedimiento utilizado para poder retornar todos los requerimientos de un proyecto</comment>
  </data>
  <data name="PROCEDIMIENTO_CONSULTAR_REQUERIMIENTOS_POR_TIPO" xml:space="preserve">
    <value>M5_ConsultarRequerimientosPorTipo</value>
    <comment>Procedimiento utilizado para retornar todos los requerimientos de un proyecto dado su tipo</comment>
  </data>
  <data name="PROCEDIMIENTO_CONSULTAR_REQUERIMIENTOS_POR_TIPO_PRIORIDAD" xml:space="preserve">
    <value>M5_ConsultarRequerimientosPorTipoPrioridad</value>
    <comment>Procedimiento utilizado para retornar todos los requerimientos de un proyecto dado su tipo y su prioridad</comment>
  </data>
  <data name="PROCEDIMIENTO_ELIMINAR_REQUERIMIENTO" xml:space="preserve">
    <value>M5_EliminarRequerimiento</value>
    <comment>Procedimiento utilizado para poder eliminar un requerimiento específico</comment>
  </data>
  <data name="PROCEDIMIENTO_EXISTE_REQUERIMIENTO" xml:space="preserve">
    <value>M5_ExisteRequerimiento</value>
    <comment>Procedimiento utilizado para verificar la existencia de un requerimiento dado su código</comment>
  </data>
  <data name="PROCEDIMIENTO_MODIFICAR_REQUERIMIENTO" xml:space="preserve">
    <value>M5_ModificarRequerimiento</value>
    <comment>Procedimiento utilizado para modificar un requerimiento específico</comment>
  </data>
  <data name="PROCEDIMIENTO_RETORNAR_CODIGO_DE_REQUERIMIENTO" xml:space="preserve">
    <value>M5_RetornarCodigoDeRequerimiento</value>
    <comment>Procedimiento utilizado para poder retornar el último req_codigo registrado según un tipo de requerimiento particular para un proyecto determinado</comment>
  </data>
  <data name="PROCEDIMIENTO_RETORNAR_ID_POR_CODIGO_PROYECTO" xml:space="preserve">
    <value>M5_RetornarIdPorCodigoProyecto</value>
    <comment>Procedimiento utilizado para poder retornar el pro_id introduciendo el pro_codigo</comment>
  </data>
  <data name="PROCEDIMIENTO_RETORNAR_ID_POR_CODIGO_REQUERIMIENTO" xml:space="preserve">
    <value>M5_RetornarIdPorCodigoRequerimiento</value>
    <comment>Procedimiento utilizado para retornar el identificador único de un requerimiento dado su código</comment>
  </data>
  <data name="PROCEDIMIENTO_RETORNAR_REQUERIMIENTO_POR_CODIGO" xml:space="preserve">
    <value>M5_ConsultarRequerimientosPorCodigo</value>
    <comment>Procedimiento utilizado para retornar un requerimiento dado su codigo</comment>
  </data>
</root>